<launch>

  <!-- Params -->
  <arg name="launch_driver" default="true" />

  <arg name="model" default="Pandar40P"/>
  <arg name="device_ip" default="192.168.1.201" />
  <arg name="lidar_port"  default="2368"/>
  <arg name="gps_port"  default="10110"/>
  <arg name="sensor_frame" default="pandar" />
  <arg name="base_frame" default="base_link" />
  <arg name="pcap" default="" />
  <arg name="calibration" default=""/>
  <arg name="scan_phase" default="0.0" />
  <arg name="manager" default="pandar_nodelet_manager" />

  <!-- nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" />


  <!-- pandar driver -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)_driver"
        args="load pandar_driver/DriverNodelet $(arg manager)" if="$(arg launch_driver)">
    <param name="pcap" type="string" value="$(arg pcap)"/>
    <param name="device_ip" type="string" value="$(arg device_ip)"/>
    <param name="lidar_port"  type="int" value="$(arg lidar_port)"/>
    <param name="gps_port"  type="int" value="$(arg gps_port)"/>
    <param name="scan_phase"  type="double" value="$(arg scan_phase)"/>
    <param name="model"  type="string" value="$(arg model)"/>
    <param name="frame_id"  type="string" value="$(arg sensor_frame)"/>
  </node>

  <!-- pandar_packets to pointcloud -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)_cloud" args="load pandar_pointcloud/CloudNodelet $(arg manager)">
    <remap from="pandar_points" to="pointcloud_raw" />
    <remap from="pandar_points_ex" to="pointcloud_raw_ex" />
    <param name="scan_phase" type="double" value="$(arg scan_phase)"/>
    <param name="model" type="string" value="$(arg model)"/>
    <param name="device_ip" type="string" value="$(arg device_ip)"/>
    <param name="calibration" type="string" value="$(arg calibration)"/>
  </node>

  <!-- crop self -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)_crop_box_filter_self" args="load pointcloud_preprocessor/crop_box_filter_nodelet $(arg manager)" output="log">
    <remap from="~input" to="pointcloud_raw_ex" />
    <remap from="~output" to="self_cropped/pointcloud_ex" />
    <remap from="~min_x" to="/vehicle_info/min_longitudinal_offset" />
    <remap from="~max_x" to="/vehicle_info/max_longitudinal_offset" />
    <remap from="~min_y" to="/vehicle_info/min_lateral_offset" />
    <remap from="~max_y" to="/vehicle_info/max_lateral_offset" />
    <remap from="~min_z" to="/vehicle_info/min_height_offset" />
    <remap from="~max_z" to="/vehicle_info/max_height_offset" />

    <param name="negative" value="True" />
    <param name="input_frame" value="$(arg base_frame)" />
    <param name="output_frame" value="$(arg base_frame)" />
  </node>

  <!-- crop mirror -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)_crop_box_filter_mirror" args="load pointcloud_preprocessor/crop_box_filter_nodelet $(arg manager)" output="log">
    <remap from="~input" to="self_cropped/pointcloud_ex" />
    <remap from="~output" to="mirror_cropped/pointcloud_ex" />
    <remap from="~min_x" to="/vehicle_info/mirror/min_longitudinal_offset" />
    <remap from="~max_x" to="/vehicle_info/mirror/max_longitudinal_offset" />
    <remap from="~min_y" to="/vehicle_info/mirror/min_lateral_offset" />
    <remap from="~max_y" to="/vehicle_info/mirror/max_lateral_offset" />
    <remap from="~min_z" to="/vehicle_info/mirror/min_height_offset" />
    <remap from="~max_z" to="/vehicle_info/mirror/max_height_offset" />

    <param name="negative" value="True" />
    <param name="input_frame" value="$(arg base_frame)" />
    <param name="output_frame" value="$(arg base_frame)" />
  </node>

  <!-- fix distortion -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)_fix_distortion" args="load velodyne_pointcloud/InterpolateNodelet $(arg manager)">
    <remap from="/vehicle/status/twist" to="/localization/eagleye/twist" />
    <remap from="velodyne_points_ex" to="mirror_cropped/pointcloud_ex" />
    <remap from="velodyne_points_interpolate" to="rectified/pointcloud" />
    <remap from="velodyne_points_interpolate_ex" to="rectified/pointcloud_ex" />
  </node>

  <!-- PointCloud Outlier Filter -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)_ring_outlier_filter" args="load pointcloud_preprocessor/ring_outlier_filter_nodelet $(arg manager)">
    <!-- <remap from="~input" to="rectified/pointcloud_ex" /> -->
    <remap from="~input" to="rectified/pointcloud_ex" />
    <remap from="~output" to="outlier_filtered/pointcloud" />
    <rosparam>
    </rosparam>
  </node>
</launch>
